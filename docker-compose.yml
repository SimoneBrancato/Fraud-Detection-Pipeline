services:

  producer:
    build:
      context: ./producer     
      dockerfile: Dockerfile
    container_name: producer                 
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka1:9092,kafka2:9092,kafka3:9092
      KAFKA_TOPIC: fraud-transactions
      TEST_DATA_PATH: fraudTest.csv
    depends_on:
      - kafka1
      - kafka2
      - kafka3

  kafka1:
    image: bitnami/kafka:3.7.0
    container_name: kafka1
    ports:
      - 9092:9092
    environment:
      KAFKA_ENABLE_KRAFT: yes
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:19092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka1:19092,2@kafka2:19093,3@kafka3:19094
      KAFKA_KRAFT_CLUSTER_ID: Nru2U1JQQT-RKA0UapBN3w
      ALLOW_PLAINTEXT_LISTENER: yes
    volumes:
      - ./kafka/data/broker1:/bitnami/kafka

  kafka2:
    image: bitnami/kafka:3.7.0
    container_name: kafka2
    ports:
      - "9093:9092"
    environment:
      KAFKA_ENABLE_KRAFT: yes
      KAFKA_CFG_NODE_ID: 2
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:19093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka1:19092,2@kafka2:19093,3@kafka3:19094
      KAFKA_KRAFT_CLUSTER_ID: Nru2U1JQQT-RKA0UapBN3w
      ALLOW_PLAINTEXT_LISTENER: yes
    volumes:
      - ./kafka/data/broker2:/bitnami/kafka

  kafka3:
    image: bitnami/kafka:3.7.0
    container_name: kafka3
    ports:
      - "9094:9092"
    environment:
      KAFKA_ENABLE_KRAFT: yes
      KAFKA_CFG_NODE_ID: 3
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:19094
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka1:19092,2@kafka2:19093,3@kafka3:19094
      KAFKA_KRAFT_CLUSTER_ID: Nru2U1JQQT-RKA0UapBN3w
      ALLOW_PLAINTEXT_LISTENER: yes
    volumes:
      - ./kafka/data/broker3:/bitnami/kafka

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    container_name: kafka-ui
    ports:
      - 8080:8080
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:9092,kafka2:9092,kafka3:9092

  kafka-init:
    image: bitnami/kafka:3.7.0
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    volumes:
      - ./kafka/code/init-topic.sh:/init-topic.sh
    environment:
      KAFKA_TOPIC: fraud-transactions
      KAFKA_BOOTSTRAP_SERVER: kafka1:9092
    command: ["/bin/bash", "/init-topic.sh"]

  #spark:
  #  image: bitnami/spark:latest
  #  container_name: spark-master
  #  ports:
  #    - 4040:4040
  #    - 7077:7077
  #  environment:
  #    - SPARK_MODE=master
  #    - HOME=/tmp/spark-home
  #  volumes:
  #    - ./spark/home:/tmp/spark-home
  #    - ./spark:/spark
  #  command: >
  #        /opt/bitnami/spark/bin/spark-submit
  #        --driver-memory 2g 
  #        --executor-memory 2g
  #        --conf spark.driver.extraJavaOptions="-Divy.cache.dir=/tmp -Divy.home=/tmp -XX:+UseG1GC"
  #        --conf spark.executor.extraJavaOptions="-XX:+UseG1GC"
  #        --packages org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.1  
  #        /spark/script.py

  #spark-worker-1:
  #  image: bitnami/spark:latest
  #  container_name: spark-worker-1
  #  environment:
  #    - SPARK_MODE=worker
  #    - SPARK_MASTER_URL=spark://spark:7077
  #  depends_on:
  #    - spark

  #spark-worker-2:
  #  image: bitnami/spark:latest
  #  container_name: spark-worker-2
  #  environment:
  #    - SPARK_MODE=worker
  #    - SPARK_MASTER_URL=spark://spark:7077
  #  depends_on:
  #    - spark


  #minio:
  #  image: minio/minio:latest
  #  container_name: minio
  #  ports:
  #    - 9000:9000
  #    - 9001:9001
  #  volumes:
  #    - ./minio_data:/data
  #  environment:
  #    - MINIO_ROOT_USER=admin
  #    - MINIO_ROOT_PASSWORD=admin123
  #  command: server /data --console-address ":9001"

  #trino:
  #  image: trinodb/trino:latest
  #  container_name: trino
  #  ports:
  #    - 8080:8080
  #  volumes:
  #    - ./trino/etc:/etc/trino

  #grafana:
  #  image: grafana/grafana-oss
  #  container_name: grafana
  #  ports:
  #    - 3000:3000
  #  volumes:
  #    - ./grafana:/var/lib/grafana
  #  environment:
  #    - GF_SECURITY_ADMIN_USER=admin
  #    - GF_SECURITY_ADMIN_PASSWORD=admin123
